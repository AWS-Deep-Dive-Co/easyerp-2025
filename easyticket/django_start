#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

# Create data directory if it doesn't exist
mkdir -p /app/data

# Run migrations
python3 manage.py migrate

# Collect static files
python3 manage.py collectstatic --noinput

# Create default ticket types if none exist
python3 manage.py shell << EOF
from tickets.models import TicketType

if not TicketType.objects.exists():
    default_types = [
        ("Standard Change Request", "Regular change with standard approval process"),
        ("Emergency Change Request", "Urgent change requiring expedited approval"),
        ("Access Request", "User access and permissions requests"),
        ("Incident Report", "IT security and operational incidents"),
    ]
    
    for name, description in default_types:
        TicketType.objects.create(name=name, description=description)
    
    print("Created default ticket types")
else:
    print("Ticket types already exist")
EOF

# Create superuser if it doesn't exist
echo "from django.contrib.auth.models import User; User.objects.filter(username='admin').exists() or User.objects.create_superuser('admin', 'admin@easyticket.local', 'password')" | python3 manage.py shell

echo "EasyTicket startup complete!"
echo "Admin login: admin / password"
echo "Access the application at: http://localhost/"
echo "Admin panel at: http://localhost/admin/"

# Start gunicorn server
gunicorn --workers=1 --bind 0.0.0.0:80 easyticket.wsgi:application
