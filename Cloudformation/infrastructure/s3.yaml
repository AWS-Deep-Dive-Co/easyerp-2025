Description: >
  This template creates an S3 bucket for the EasyERP application.
  The bucket is configured with appropriate security settings and 
  can be used for storing application assets, logs, or other data.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

Resources:
  S3AccessLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub easyerp-access-logs-${AWS::AccountId}-${AWS::Region}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
            BucketKeyEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldAccessLogs
            Status: Enabled
            ExpirationInDays: 90
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EasyERP-AccessLogs-Bucket
        - Key: Environment
          Value: !Ref EnvironmentName

  S3Bucket:
    Type: AWS::S3::Bucket
    DependsOn: S3AccessLogsBucket
    Properties:
      BucketName: !Sub easyerp-app-bucket-${AWS::AccountId}-${AWS::Region}
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
            BucketKeyEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Ref S3AccessLogsBucket
        LogFilePrefix: access-logs/
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EasyERP-S3-Bucket
        - Key: Environment
          Value: !Ref EnvironmentName

  S3Bucket2:
    Type: AWS::S3::Bucket
    DependsOn: S3AccessLogsBucket
    Properties:
      BucketName: !Sub easyerp-data-bucket-${AWS::AccountId}-${AWS::Region}
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
            BucketKeyEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Ref S3AccessLogsBucket
        LogFilePrefix: access-logs/
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EasyERP-S3-Bucket
        - Key: Environment
          Value: !Ref EnvironmentName

  S3LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub 
        - /aws/s3/${env}-easyerp-bucket
        - env: !Ref EnvironmentName
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EasyERP-S3-Logs
        - Key: Environment
          Value: !Ref EnvironmentName

Outputs:
  EasyERPAppBucket:
    Description: Name of the EasyERP application S3 bucket
    Value: !Ref S3Bucket
    Export:
      Name: !Sub ${AWS::StackName}-EasyERPAppBucket
  
  EasyERPAppBucketArn:
    Description: ARN of the EasyERP application S3 bucket
    Value: !GetAtt S3Bucket.Arn
    Export:
      Name: !Sub ${AWS::StackName}-EasyERPAppBucketArn

  EasyERPAccessLogsBucket:
    Description: Name of the S3 access logs bucket
    Value: !Ref S3AccessLogsBucket
    Export:
      Name: !Sub ${AWS::StackName}-EasyERPAccessLogsBucket
  
  EasyERPLogGroup:
    Description: CloudWatch Log Group for EasyERP S3 bucket logs
    Value: !Ref S3LogGroup
    Export:
      Name: !Sub ${AWS::StackName}-EasyERPLogGroup

