name: Sync to S3

on:
  push:
    branches:
      - main
      - stage
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    environment: ${{ github.ref_name == 'main' && 'Production' || 'Staging' }}
    steps:
    - uses: actions/checkout@v4
      with:
          ref: ${{ github.ref_name }}
          
    - name: Determine environment
      id: environment
      run: |
        if [ "${{ github.ref_name }}" = "main" ]; then
          echo "env=Production" >> $GITHUB_OUTPUT
          echo "bucket_env=PROD" >> $GITHUB_OUTPUT
        else
          echo "env=Staging" >> $GITHUB_OUTPUT
          echo "bucket_env=STAGE" >> $GITHUB_OUTPUT
        fi
        
    - name: Display deployment info
      run: |
        echo "Deploying to: ${{ steps.environment.outputs.env }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
    - name: List files after checkout
      run: ls -alh
    - name: Print working directory
      run: pwd
    - name: Ensure AWS CLI is installed
      run: |
        if ! command -v aws >/dev/null 2>&1; then
          echo "AWS CLI not found, installing..."
          curl -s "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
          unzip -q /tmp/awscliv2.zip -d /tmp
          sudo /tmp/aws/install
          rm -rf /tmp/aws /tmp/awscliv2.zip
        else
          echo "AWS CLI already installed"
        fi
    - name: Sync to S3
      run: |
        # Determine which S3 bucket to use based on environment
        if [ "${{ steps.environment.outputs.env }}" = "production" ]; then
          S3_BUCKET="${{ secrets.AWS_S3_BUCKET_PROD || secrets.AWS_S3_BUCKET }}"
          echo "Syncing to Production S3 bucket: $S3_BUCKET"
        else
          S3_BUCKET="${{ vars.AWS_S3_BUCKET }}"
          echo "Syncing to Staging S3 bucket: $S3_BUCKET"
        fi
        
        echo "Starting S3 sync..."
        aws s3 sync . s3://$S3_BUCKET --delete --region $AWS_REGION
        echo "âœ… S3 sync completed successfully!"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}

